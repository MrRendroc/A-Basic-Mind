1 sad = 159 : rem $9f
2 mem = 1 + sad*256
5 def fn hx(i) = 48 + i + 7 * int(i/10)
10 for i = 0 to 255
15 adr = i-2 : q = i
20 if i-int(i/16)*16 = 0 then gosub 75
30 read q
40 if adr>=0 then poke mem+adr, q
50 gosub 80 : rem print mem+adr, q
60 next i
70 sys 2225-2048+sad*256 : rem sys 2225
75 print : gosub 80 : print ": "; : return
80 a% = int(q/16) : b% = int(q-16*a%)
90 print chr$(fn hx(a%))chr$(fn hx(b%));
95 return

99 rem load address
100 data 1,8 

109 rem bootstrap
110 data 11,8,255,211,158,50,50,50,53: rem 0,0,0

119 rem sid registers
120 data 0,0,0,25,65 
130 data 28,208 : rem vic register
140 data 0,220,0,0,17 : rem current palette
150 data 208,224,11,16,51,14,97,144,245
160 data 7,0,255,31

169 rem script : 255,31
170 data 20,65,213,36,21,37,21,83,21,97,213,41
180 data 27,15

189 rem interrupt routine 
190 data 230,19,230,19,208,2,230,32,169,97,133,28,167,32 
200 data 224,63,240,8,144,12,78,17,208,108,252,255,160,109,132,34
210 data 132,215,74,75,28,168,165,19,41,48,208,2,198,28,224,47
220 data 240,17,176,2,162,2,201,16,240,9,138,41,3,170,181,243
230 data 133,10,45,171,0,176,17,183,34,182,33,149,0,165,19,75
240 data 14,170,203,248,134,204,73,7,133,11,165,19,41,15,208,15
250 data 169,184,71,20,144,2,133,20,41,7,170,181,247,133,18,160
260 data 8,183,13,145,15,136,16,249,168,183,9,145,3,136,208,249
270 data 76,126,234

279 rem initialization
280 data 120,142,134,2,142,33,208,32,68,229,162,253,189
289 rem data 2,8 replace $0802 with $<SAD>02
290 data 2,159,149,2,202,208,248,142,21,3,76,204,0

299 rem main routine
300 data 169,80,141 
310 data 17,208,88,173,4,220,160,195,13,28,212,72,75,4,160,48
320 data 140,24,208,113,203,230,203,113,203,106,5,32,160,88,5,213
330 data 145,203,208,223

339 rem bass notes
340 data 43,170,2,98

349 rem melody notes
350 data 0,24,38,32,18,36,19,16
